{"meta":{"title":"狐の小屋","subtitle":"","description":"","author":"Mythe","url":"http://mythe51.github.io","root":"/"},"pages":[{"title":"about","date":"2022-04-21T07:50:35.000Z","updated":"2022-04-21T07:50:35.756Z","comments":true,"path":"about/index.html","permalink":"http://mythe51.github.io/about/index.html","excerpt":"","text":""},{"title":"music","date":"2022-04-22T01:39:11.000Z","updated":"2022-04-22T01:39:11.929Z","comments":true,"path":"music/index.html","permalink":"http://mythe51.github.io/music/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2022-04-21T15:11:06.000Z","updated":"2022-04-24T04:02:02.861Z","comments":true,"path":"link/index.html","permalink":"http://mythe51.github.io/link/index.html","excerpt":"","text":""},{"title":"投喂","date":"2022-04-21T15:11:06.000Z","updated":"2022-04-22T03:10:00.345Z","comments":false,"path":"donate/index.html","permalink":"http://mythe51.github.io/donate/index.html","excerpt":"","text":""},{"title":"nanatoserver","date":"2022-04-23T09:24:17.000Z","updated":"2022-04-23T09:24:18.019Z","comments":true,"path":"nanatoserver/index.html","permalink":"http://mythe51.github.io/nanatoserver/index.html","excerpt":"","text":""}],"posts":[{"title":"米游社api相关","slug":"米游社api相关","date":"2022-05-09T11:00:00.000Z","updated":"2022-05-09T11:25:28.998Z","comments":true,"path":"2022/05/09/米游社api相关/","link":"","permalink":"http://mythe51.github.io/2022/05/09/%E7%B1%B3%E6%B8%B8%E7%A4%BEapi%E7%9B%B8%E5%85%B3/","excerpt":"","text":"米游社API相关请求规范（请求头） 字段 说明 参考值（无特殊需求可以照抄） x-rpc-app_version 米游社app版本 2.11.1 User-Agent UA字段 Mozilla/5.0 AppleWebKit/605.1.15 (KHTML, like Gecko) miHoYoBBS/2.11.1 x-rpc-client_type 客户端类型 5 Referer Referer字段 https://webstatic.mihoyo.com/ Cookie 米游社Cookie 浏览器登录米游社，F12找到控制台，输入”document.cookie”回车即可，如下图 DS 动态密钥 生成方法如下 动态密钥动态密钥由3部分构成，最后一部分是一个MD5。MD5的输入由5个部分构成，按照如下格式进行组合： data = f\"salt=&amp;#123;CN_DS_SALT&amp;#125;&amp;t=&amp;#123;t&amp;#125;&amp;r=&amp;#123;r&amp;#125;&amp;b=&amp;#123;b&amp;#125;&amp;q=&amp;#123;q&amp;#125;\" # 中间不能有空格 参数说明： 参数 含义 CN_DS_SALT 盐，在当前版本的米游社app里这个值是“xV8v4Qu54lUKrEYFZkJhB8cuOh9Asafs” t 时间戳 r 一个从100000到200000的随机数 b POST请求的数据，需要将字典对象序列化 q GET请求的数据，形如”aaa=aaa&amp;bbb=bbb&amp;ccc=ccc” 伪代码如下： data = \"salt=&amp;#123;CN_DS_SALT&amp;#125;&amp;t=&amp;#123;t&amp;#125;&amp;r=&amp;#123;r&amp;#125;&amp;b=&amp;#123;b&amp;#125;&amp;q=&amp;#123;q&amp;#125;\" md5data = md5(data) DS = \"&amp;#123;t&amp;#125;,&amp;#123;r&amp;#125;,&amp;#123;h&amp;#125;\" 给出两种实现方式： python（@heartalborada） CN_DS_SALT = 'xV8v4Qu54lUKrEYFZkJhB8cuOh9Asafs' def generate_cn_ds(body = None, query = None) -> str: ''' Body: POST请求 query: GET请求 ''' t = int(time.time()) r = random.randint(100001, 200000) b = json.dumps(body) if body else \"\" q = \"&amp;\".join(f\"&amp;#123;k&amp;#125;=&amp;#123;v&amp;#125;\" for k, v in sorted(query.items())) if query else \"\" h = hashlib.md5(f\"salt=&amp;#123;CN_DS_SALT&amp;#125;&amp;t=&amp;#123;t&amp;#125;&amp;r=&amp;#123;r&amp;#125;&amp;b=&amp;#123;b&amp;#125;&amp;q=&amp;#123;q&amp;#125;\".encode()).hexdigest() return f\"&amp;#123;t&amp;#125;,&amp;#123;r&amp;#125;,&amp;#123;h&amp;#125;\" C#（@DGP-Studio） using Snap.Data.Json; using Snap.Data.Utility; using System; using System.Linq; public class DynamicSecretProvider2 : Md5Converter &#123; private static readonly string APISalt = \"xV8v4Qu54lUKrEYFZkJhB8cuOh9Asafs\"; public static string Create(string queryUrl, object? postBody = null) &#123; long t = DateTimeOffset.UtcNow.ToUnixTimeSeconds(); string r = GetRandomString(); string b = postBody is null ? \"\" : Json.Stringify(postBody); string q = \"\"; string[] urlParts = queryUrl.Split('?'); if (urlParts.Length == 2) &#123; string[] queryParams = urlParts[1].Split('&').OrderBy(x => x).ToArray(); q = string.Join(\"&\", queryParams); &#125; string check = GetComputedMd5($\"salt=&#123;APISalt&#125;&t=&#123;t&#125;&r=&#123;r&#125;&b=&#123;b&#125;&q=&#123;q&#125;\"); return $\"&#123;t&#125;,&#123;r&#125;,&#123;check&#125;\"; &#125; private static readonly Random random = new(); private static string GetRandomString() &#123; return random.Next(100000, 200000).ToString(); &#125; &#125; APIUID 查询玩家基本信息url：https://api-takumi-record.mihoyo.com/game_record/app/genshin/api/index 请求方式：GET 传入字段 说明 值 role_id 玩家UID 如“100010000” server 玩家所在服务器 “cn_gf01”国服官服，“cn_qd01”国服B服 role_id 玩家 UID anyserver 玩家所在服务器 cn_gf01/cn_qd01 获取角色武器和圣遗物url：https://api-takumi-record.mihoyo.com/game_record/app/genshin/api/character 请求方式：POST 传入字段 说明 值 character_ids 要查询的角色id 传入空数组即可，即 []，可获取全部角色 role_id 玩家UID 如“100010000” server 玩家所在服务器 “cn_gf01”国服官服，“cn_qd01”国服B服 获取档期和上期角色数据url：https://api-takumi-record.mihoyo.com/game_record/app/genshin/api/spiralAbyss 请求方式：GET 传入字段 说明 值 role_id 玩家UID 如“100010000” server 玩家所在服务器 “cn_gf01”国服官服，“cn_qd01”国服B服","categories":[{"name":"默认","slug":"默认","permalink":"http://mythe51.github.io/categories/%E9%BB%98%E8%AE%A4/"}],"tags":[{"name":"默认","slug":"默认","permalink":"http://mythe51.github.io/tags/%E9%BB%98%E8%AE%A4/"}]},{"title":"abccc","slug":"abccc","date":"2022-04-21T07:25:36.000Z","updated":"2022-04-21T07:26:47.606Z","comments":true,"path":"2022/04/21/abccc/","link":"","permalink":"http://mythe51.github.io/2022/04/21/abccc/","excerpt":"","text":"this is a test blog","categories":[{"name":"默认","slug":"默认","permalink":"http://mythe51.github.io/categories/%E9%BB%98%E8%AE%A4/"}],"tags":[{"name":"默认","slug":"默认","permalink":"http://mythe51.github.io/tags/%E9%BB%98%E8%AE%A4/"}]},{"title":"Hello World","slug":"hello-world","date":"2022-04-21T04:50:44.934Z","updated":"1985-10-26T08:15:00.000Z","comments":true,"path":"2022/04/21/hello-world/","link":"","permalink":"http://mythe51.github.io/2022/04/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"默认","slug":"默认","permalink":"http://mythe51.github.io/categories/%E9%BB%98%E8%AE%A4/"}],"tags":[{"name":"默认","slug":"默认","permalink":"http://mythe51.github.io/tags/%E9%BB%98%E8%AE%A4/"}]}